<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_force_change</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = 64
grad=irandom_range(0,360)

played_sound = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision

if instance_number(obj_ball) &gt; 0
{
    if obj_ball.dead = false &amp;&amp; collision_circle(x,y,radius,obj_ball,true,true)
    {
        if obj_ball.draw_size &lt; radius/2 &amp;&amp; played_sound = false
        {
            audio_play_sound(snd_grow,2,false)
            played_sound = true
        }
        if obj_ball.draw_size &gt; radius*2 &amp;&amp; played_sound = false
        {
            audio_play_sound(snd_shrink,2,false)
            played_sound = true
        }
        obj_ball.size = radius
        obj_ball.add_size = 0
        obj_ball.touch_previous = obj_ball.touch_pos
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_ball) &gt; 0
{
    image_alpha = obj_ball.line_alpha
}
else
{
    image_alpha = 1
}


if point_within_view(x,y)
{
    //draw_sprite_ext(sprite_index, image_index,x,y,radius/(sprite_width/2),radius/(sprite_height/2),image_angle,image_blend,image_alpha)
   
      
    draw_set_alpha(image_alpha)
    
    //draw_circle(x,y,radius,true) 
    draw_set_color(c_black)
    draw_circle(x,y,radius+(4*round(radius/64))+1,false)
    draw_set_color(c_white)
    grad+=1
    if grad &gt; 256
    {
        grad = 0
    }
    draw_circle_color(x, y, radius, make_color_hsv(grad, 0, 255), make_color_hsv(256-grad, 255, 255), false);
    
        
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
