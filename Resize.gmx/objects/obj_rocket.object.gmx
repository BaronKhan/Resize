<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rocket</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_launcher) &gt; 0
{
    direction = instance_nearest(x,y,obj_launcher).direction
}

image_angle = direction

turn = false

alarm[0] = room_speed

beep_speed = room_speed

alarm[1] = 1

dead = false

done = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle setup

    // Code created using Aerohawk Effects 4 by Wormintheworks

// VARIABLE SETUP. Put this in the create event before the PARTICLE SETUP.

_partabcde_shape=pt_shape_pixel
_partabcde_count=300
_partabcde_sprite=0
_partabcde_col1=65535
_partabcde_col2=4235519
_partabcde_col3=255
_partabcde_alp1=1
_partabcde_alp2=1
_partabcde_alp3=1
_partabcde_sizmn=1
_partabcde_sizmx=1
_partabcde_sizic=0
_partabcde_sizwg=0
_partabcde_xscale=1
_partabcde_yscale=1
_partabcde_orimn=0
_partabcde_orimx=0
_partabcde_oriic=0
_partabcde_oriwg=0
_partabcde_orirl=0
_partabcde_dirmn=0
_partabcde_dirmx=360
_partabcde_diric=0
_partabcde_dirwg=0
_partabcde_spdmn=4
_partabcde_spdmx=4
_partabcde_spdic=0
_partabcde_spdwg=0
_partabcde_grvam=0
_partabcde_grvdir=0
_partabcde_lifemin=20
_partabcde_lifemax=40
_partabcde_abl=0
_emiabcde_radius=min(sprite_width,sprite_height)/2
_emiabcde_shape=ps_shape_rectangle
_emiabcde_distr=ps_distr_linear

// PARTICLE SETUP. Put this in the create event after the VARIABLE SETUP.

_sysabcde=part_system_create()
part_system_depth(_sysabcde,depth)
_partabcde=part_type_create()
part_type_shape(_partabcde,_partabcde_shape)
if (_partabcde_sprite=1) {part_type_sprite(_partabcde,sPartSprite,0,0,0)}
part_type_color3(_partabcde,_partabcde_col1,_partabcde_col2,_partabcde_col3)
part_type_alpha3(_partabcde,_partabcde_alp1,_partabcde_alp2,_partabcde_alp3)
part_type_size(_partabcde,_partabcde_sizmn,_partabcde_sizmx,_partabcde_sizic,_partabcde_sizwg)
part_type_scale(_partabcde,_partabcde_xscale,_partabcde_yscale)
part_type_orientation(_partabcde,_partabcde_orimn,_partabcde_orimx,_partabcde_oriic,_partabcde_oriwg,_partabcde_orirl)
part_type_direction(_partabcde,_partabcde_dirmn,_partabcde_dirmx,_partabcde_diric,_partabcde_dirwg)
part_type_speed(_partabcde,_partabcde_spdmn,_partabcde_spdmx,_partabcde_spdic,_partabcde_spdwg)
part_type_gravity(_partabcde,_partabcde_grvam,_partabcde_grvdir)
part_type_life(_partabcde,_partabcde_lifemin,_partabcde_lifemax)
part_type_blend(_partabcde,_partabcde_abl)
_emiabcde=part_emitter_create(_sysabcde)

/* PARTICLE CREATION. default is stream, uncomment to burst. Place in the event
that should start your particle creation, Aerohawk Effects 4 uses the CREATE event. */

//part_emitter_stream(_sysabcde,_emiabcde,_partabcde,_partabcde_count)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire trail


sys = part_system_create();



//Emitter
emitter = part_emitter_create(sys);
part_emitter_region(sys,emitter,x-4,x+4,y,y,ps_shape_line,ps_distr_linear);

//Fire Particle
fire = part_type_create();
part_type_alpha2(fire,1,0);
part_type_color1(fire,make_color_rgb(255,128,64));
part_system_depth(sys,depth+1)
part_type_blend(fire,1);
part_type_direction(fire,direction-180,direction-180,0,0);
part_type_gravity(fire,0,direction-180);
part_type_life(fire,4,15);
part_type_orientation(fire,0,360,-2+random(4),0,0);
part_type_sprite(fire,spr_fire,0,0,0);
part_type_size(fire,0.5,1,0.02,0);
part_type_speed(fire,1,3,0.1,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_clear(fire)
part_emitter_destroy_all(sys)
part_system_destroy(sys)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_clear(_partabcde)
part_emitter_destroy_all(_sysabcde)
part_system_destroy(_sysabcde)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Beep sound
if dead = false
{



audio_play_sound(snd_rocket_beep,3,false)

beep_speed = beep_speed/1.1

alarm[1] = beep_speed

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle=(image_angle+(sin(degtorad((direction)-image_angle))*(speed*3)));



if dead = false
{
if turn = false
{
    speed = global.level_speed/4
}
else
{   
    if instance_number(obj_ball) &gt; 0 
    {
        if obj_ball.dead = false
        {
            mp_linear_step_object(obj_ball.x,obj_ball.y,global.level_speed*(obj_ball.path_position), obj_title_CTRL)
            
        }
        else
        {
            turn = false
        }
        if obj_ball.done = true
        {
            dead = true
            speed = 0
            
        }
    }
}
}
else
{
    speed = 0
    gravity = 0
}


if beep_speed &lt; room_speed/20
{
 dead = true
}


if dead = true &amp;&amp; done = false
{
    //_emiabcde_radius=radius
    part_emitter_region(_sysabcde,_emiabcde,x-_emiabcde_radius,x+_emiabcde_radius,y-_emiabcde_radius,y+_emiabcde_radius,_emiabcde_shape,_emiabcde_distr)
    part_emitter_burst(_sysabcde,_emiabcde,_partabcde,_partabcde_count)
    //audio_play_sound(snd_explode,7,false)
    audio_play_sound(snd_rocket_explode,7,false)
    done = true
    alarm[2] = 90
    speed = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead = false
{
part_type_gravity(fire,0,direction-180);
 part_type_orientation(fire,0,360,-2+random(2),0,0);
 part_type_direction(fire,direction-180,direction-180,0,0);

 part_emitter_region(sys,emitter,x-2,x+2,y,y,ps_shape_line,ps_distr_linear);
 part_emitter_burst(sys,emitter,fire,20);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_breakable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.done = false
{
    
        if other.broken = false
        {
            other.broken = true
        }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_clear(_partabcde)
part_emitter_destroy_all(_sysabcde)
part_system_destroy(_sysabcde)

part_particles_clear(fire)
part_emitter_destroy_all(sys)
part_system_destroy(sys)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead = false
 {
   if instance_number(obj_ball) &gt; 0
    {
        image_alpha = obj_ball.line_alpha
    }
    else
    {
        image_alpha = 1
    }
    
    if point_within_view(x,y)
    {
        draw_sprite_ext(sprite_index, image_index,x,y,1,1,image_angle,image_blend,image_alpha)
    }
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>38,26</point>
    <point>38,38</point>
  </PhysicsShapePoints>
</object>
