<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0
image_speed = 0
image_xscale = 2
image_yscale = 2
shoot = 2

xx = 0
yy = 0

bullet_size = 64

hp = 5

add_random = true


beep_speed = 9999

alarm[2] = room_speed*4

bullet_size = 0

hit = false

dead = false

lightning_alpha = 0

done = false

move_down = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle setup

    // Code created using Aerohawk Effects 4 by Wormintheworks

// VARIABLE SETUP. Put this in the create event before the PARTICLE SETUP.

_partabcd_shape=pt_shape_pixel
_partabcd_count=800
_partabcd_sprite=0
_partabcd_col1=65535
_partabcd_col2=4235519
_partabcd_col3=255
_partabcd_alp1=1
_partabcd_alp2=1
_partabcd_alp3=1
_partabcd_sizmn=1
_partabcd_sizmx=1
_partabcd_sizic=0
_partabcd_sizwg=0
_partabcd_xscale=1
_partabcd_yscale=1
_partabcd_orimn=0
_partabcd_orimx=0
_partabcd_oriic=0
_partabcd_oriwg=0
_partabcd_orirl=0
_partabcd_dirmn=0
_partabcd_dirmx=360
_partabcd_diric=0
_partabcd_dirwg=0
_partabcd_spdmn=4
_partabcd_spdmx=4
_partabcd_spdic=0
_partabcd_spdwg=0
_partabcd_grvam=0
_partabcd_grvdir=0
_partabcd_lifemin=20
_partabcd_lifemax=40
_partabcd_abl=0
_emiabcd_radius=256
_emiabcd_shape=ps_shape_rectangle
_emiabcd_distr=ps_distr_linear

// PARTICLE SETUP. Put this in the create event after the VARIABLE SETUP.

_sysabcd=part_system_create()
part_system_depth(_sysabcd,depth)
_partabcd=part_type_create()
part_type_shape(_partabcd,_partabcd_shape)
if (_partabcd_sprite=1) {part_type_sprite(_partabcd,sPartSprite,0,0,0)}
part_type_color3(_partabcd,_partabcd_col1,_partabcd_col2,_partabcd_col3)
part_type_alpha3(_partabcd,_partabcd_alp1,_partabcd_alp2,_partabcd_alp3)
part_type_size(_partabcd,_partabcd_sizmn,_partabcd_sizmx,_partabcd_sizic,_partabcd_sizwg)
part_type_scale(_partabcd,_partabcd_xscale,_partabcd_yscale)
part_type_orientation(_partabcd,_partabcd_orimn,_partabcd_orimx,_partabcd_oriic,_partabcd_oriwg,_partabcd_orirl)
part_type_direction(_partabcd,_partabcd_dirmn,_partabcd_dirmx,_partabcd_diric,_partabcd_dirwg)
part_type_speed(_partabcd,_partabcd_spdmn,_partabcd_spdmx,_partabcd_spdic,_partabcd_spdwg)
part_type_gravity(_partabcd,_partabcd_grvam,_partabcd_grvdir)
part_type_life(_partabcd,_partabcd_lifemin,_partabcd_lifemax)
part_type_blend(_partabcd,_partabcd_abl)
_emiabcd=part_emitter_create(_sysabcd)

/* PARTICLE CREATION. default is stream, uncomment to burst. Place in the event
that should start your particle creation, Aerohawk Effects 4 uses the CREATE event. */

//part_emitter_stream(_sysabcd,_emiabcd,_partabcd,_partabcd_count)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_clear(_partabcd)
part_emitter_destroy_all(_sysabcd)
part_system_destroy(_sysabcd)

instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_emiabcd_radius=256
    part_emitter_region(_sysabcd,_emiabcd,x-_emiabcd_radius,x+_emiabcd_radius,y-_emiabcd_radius,y+_emiabcd_radius,_emiabcd_shape,_emiabcd_distr)
    part_emitter_burst(_sysabcd,_emiabcd,_partabcd,_partabcd_count)
    audio_play_sound(snd_rocket_explode,7,false)
    alarm[5] = 90
    done = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_index = 0
    {
        image_index = 1
    }
    else
    {
        image_index = 0
    }
hit = false

if hp &lt; 1
{
    alarm[3] = 20
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset bullet


if hp &gt; 0
{
shoot = 0

beep_speed = room_speed
alarm[0] = 1
bullet_size = 0
if hp != 5
    {
    move_down = true
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IN USE</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Beep sound
if shoot = 0
{



audio_play_sound(snd_rocket_beep,3,false)

beep_speed = beep_speed/1.1

alarm[0] = beep_speed

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_angle += 2

if image_angle &gt; 360
{
    image_angle = image_angle-360
}

spd = abs(obj_ball.vspeed)
if x &lt; (view_xview+(view_wview/2))+xx
{
    x+=min(6,((view_xview+(view_wview/2))+xx)-x)
}

if x &gt; (view_xview+(view_wview/2))+xx
{
    x-=min(6,x-((view_xview+(view_wview/2))+xx))
}

if y &lt; view_yview+yy
{
    y+=min(spd+1,(view_yview+yy)-y)
}

if y &gt; view_xview+yy
{
    y-=min(spd+1,y-(view_yview+yy))
}

if add_random = true &amp;&amp; shoot = 0 &amp;&amp; beep_speed &gt; room_speed/8
{
    if alarm[1] = -1
    {
        //alarm[1] = random_range((room_speed*2)+(12*hp)/**global.survival_speed*/,(room_speed*2)+(12*hp)/**global.survival_speed*/)
        alarm[1] = random_range((room_speed*3)/**global.survival_speed*/,(room_speed*3)/**global.survival_speed*/)
        
        switch(irandom_range(1,5))
        {
            case 1:
            create_survival_object(obj_spike,random_range(40,128),0)
            break;
            case 2:
            create_survival_object(obj_spike,random_range(-128,-40),0)
            break;
            case 3:
            with (create_survival_object(obj_size_increase,0,0))
            {
                radius = random_range(20, 110)
            }
            break;
            case 4:
            with (create_survival_object(obj_size_decrease,0,0))
            {
                radius = random_range(20, 110)
            }
            break;
            case 5:
            with (create_survival_object(obj_wall_breakable,0,0))
            {
                radius = random_range(20, 110)
            }
            break;
        }
    }
}

if beep_speed &lt; room_speed/20
{
    shoot = 1
    audio_play_sound(snd_zap,9,false)
    with (instance_create(x,y,obj_boss_bullet))
    {
        image_xscale = obj_boss.bullet_size/128
        image_yscale = obj_boss.bullet_size/128
    }
    alarm[2] = irandom_range(room_speed*3,room_speed*4)
    beep_speed = 9999
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt; 1 &amp;&amp; dead = false
{
    dead = true
    shoot = 2
    alarm[4] = room_speed*4
    alarm[0] = -1
    alarm[2] = -1
    
}

if move_down = false
{
    temp_yy = yy
}

if move_down = true
{
    yy+=1
    
    if yy &gt; temp_yy + 15
    {
        move_down = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.rebound = true &amp;&amp; hit = false
{
    hit = true
    with (other)
    {
        instance_destroy()
    }
    image_index = 1
    alarm[3] = 10
    hp -= 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if done = false
{

    //draw lightning
    if shoot = 0
    {
        if lightning_alpha &lt; 1
        {
            lightning_alpha += 0.1
        }
        colour = c_aqua
        draw_set_alpha(lightning_alpha)
        draw_lightning(x+lengthdir_x(100,0),y+lengthdir_y(100,0),x,y,colour,4,3,6,true)
        //4-random(6) gives an answer that is more likely to be positive than negative, so it tends to curve
        draw_lightning(x+lengthdir_x(100,180),y+lengthdir_y(100,180),x,y,colour,4,3,6,true)
        //2-random(6) gives an answer that is more likely to be negative than positive, so it curves the other way
        draw_set_alpha(1)
        //draw_lightning(lengthdir_x(100,image_angle),lengthdir_y(100,image_angle),x,y,colour,4,3,6,true)//3-random(6) is equall in either way
        
        //draw_lightning(lengthdir_x(100,image_angle),lengthdir_y(100,image_angle),x,y,colour,4,3,6,true)//so it goes in a moderately straight line
    }
    else
    {
        if lightning_alpha &gt; 0
        {
            lightning_alpha -=0.1
        }
    }



    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)

    
    if shoot = 0 &amp;&amp; instance_number(obj_ball) &gt; 0
    {
        bullet_size =(bullet_size+(sin(degtorad((obj_ball.draw_size*1.3)-bullet_size))*6));
        draw_sprite_ext(spr_boss_bullet,0,x,y,bullet_size/(sprite_get_width(spr_boss_bullet)/2),
        bullet_size/(sprite_get_height(spr_boss_bullet)/2),0,c_white,image_alpha)
    }


    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>256,256</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
