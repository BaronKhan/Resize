<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_size_increase</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = 64

status = 0
draw_angle = 0

image_speed = 0
image_index = 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotate and fade

direction += 1 * (room_speed/60)

if direction &gt; 360
{
 direction = direction - 360
}

image_angle=(image_angle+(sin(degtorad(direction-image_angle))*12));


/*if status = 1
{
    status = 2
}*/

/*if status = 2
{
    image_alpha -= 0.04
}*/

if image_alpha &lt; 0
{
 instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(obj_ball) &gt; 0
{
    image_alpha = obj_ball.line_alpha
}
else
{
    image_alpha = 1
}

i = 0
if point_within_view(x,y)
{
    if sprite_index = spr_size_increase
    {
        draw_sprite_ext(sprite_index, image_index,x,y,radius/(sprite_width/2),radius/(sprite_height/2),image_angle,image_blend,image_alpha)
    }
    else
    {
        draw_sprite_ext(sprite_index, image_index,x,y,radius/(sprite_width/4),radius/(sprite_height/4),image_angle,image_blend,image_alpha)
    }
   draw_set_alpha(image_alpha)
    
    /*for (i=0; i &lt; 6; i+=1)
    {
        draw_circle_part(x,y,radius+1,i*60,(i*60)+30, true, 2)
    }*/
    if os_browser = browser_not_a_browser
    {
    /*draw_angle += 1
    if draw_angle &gt; 360
    {
        draw_angle = draw_angle-360
    }*/
    if global.swap_arrows = true &amp;&amp; sprite_index != spr_size_increase_2
    {
        sprite_index = spr_size_increase_2
    }
    
    draw_angle -= 1
    if draw_angle &lt; 0
    {
        draw_angle = 360+draw_angle
    }
    for (i=0; i &lt; 4; i+=1)
    {
        draw_circle_part(x,y,radius+(2*round(radius/64)),(i*90)-45+draw_angle,(i*90)+draw_angle, true, 4)
    }
    }
    
    
    draw_set_alpha(1)
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
